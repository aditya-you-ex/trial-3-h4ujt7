# =============================================================================
# FILE DESCRIPTION:
# -----------------------------------------------------------------------------
# This file defines Kubernetes ServiceAccount resources for the TaskStream AI
# platform, addressing the following specifications:
#   1) Security Architecture (Technical Specifications/2.4.2)
#   2) Access Control (Technical Specifications/7.3.1)
#   3) Compliance Requirements (Technical Specifications/7.3.3)
#
# EXTERNAL IMPORT:
#   - "kubernetes" (v1.27+), required for ServiceAccount resource definitions.
#
# INTERNAL IMPORT REFERENCES:
#   - "rbac.yaml" for role bindings:
#       analytics-role-binding, nlp-role-binding, monitoring-cluster-role-binding
#   - "pod-security-policies.yaml" for PodSecurityPolicy references:
#       restricted, privileged
#
# USAGE & PURPOSE:
#   - Each ServiceAccount is associated with a specific namespace from
#     ${SERVICE_NAMESPACES} (analytics, nlp, monitoring, etc.).
#   - Enhanced security annotations ensure strict compliance with SOC 2 Type II,
#     ISO 27001, and token rotation policies.
#   - automountServiceAccountToken is set to true so that pods in these
#     namespaces can securely communicate with other services and APIs.
#
# NOTES:
#   - The ServiceAccounts below attach to respective RBAC RoleBindings from
#     rbac.yaml, granting fine-grained permissions.
#   - Each ServiceAccount includes "kubernetes.io/enforce-mountable-secrets"
#     to ensure secret mounting is restricted to valid uses.
#   - Additional security.taskstream.ai annotations enable advanced auditing
#     and automatic token rotation.
#
# =============================================================================

# -----------------------------------------------------------------------------
# SERVICE ACCOUNT: analytics-service-account
# -----------------------------------------------------------------------------
# Namespace: ${SERVICE_NAMESPACES.ANALYTICS} (evaluates to "analytics")
# This account is bound by analytics-role-binding in rbac.yaml and references
# the "restricted" PodSecurityPolicy from pod-security-policies.yaml.
# Enhanced security annotations:
#   - security.taskstream.ai/token-rotation: Automated token cycling
#   - security.taskstream.ai/audit-logging: Detailed event logging
# Ensures compliance with 7.3.3 (SOC 2, ISO 27001) by forcing mountable secrets
# verification (kubernetes.io/enforce-mountable-secrets).
# -----------------------------------------------------------------------------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: analytics-service-account
  namespace: "{{ .Values.SERVICE_NAMESPACES.ANALYTICS | default \"analytics\" }}"
  labels:
    app.kubernetes.io/name: "analytics"
    app.kubernetes.io/component: "service-account"
    app.kubernetes.io/part-of: "taskstream-ai"
    app.kubernetes.io/managed-by: "infrastructure-team"
  annotations:
    kubernetes.io/enforce-mountable-secrets: "true"
    security.taskstream.ai/token-rotation: "enabled"
    security.taskstream.ai/audit-logging: "enabled"
automountServiceAccountToken: true
---
# -----------------------------------------------------------------------------
# SERVICE ACCOUNT: nlp-service-account
# -----------------------------------------------------------------------------
# Namespace: ${SERVICE_NAMESPACES.NLP} (evaluates to "nlp")
# This account is bound by nlp-role-binding in rbac.yaml and references the
# "restricted" PodSecurityPolicy. It receives similar security enhancements
# (token rotation, audit logging) to maintain minimal attack surface and
# consistent compliance posture.
# -----------------------------------------------------------------------------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nlp-service-account
  namespace: "{{ .Values.SERVICE_NAMESPACES.NLP | default \"nlp\" }}"
  labels:
    app.kubernetes.io/name: "nlp"
    app.kubernetes.io/component: "service-account"
    app.kubernetes.io/part-of: "taskstream-ai"
    app.kubernetes.io/managed-by: "infrastructure-team"
  annotations:
    kubernetes.io/enforce-mountable-secrets: "true"
    security.taskstream.ai/token-rotation: "enabled"
    security.taskstream.ai/audit-logging: "enabled"
automountServiceAccountToken: true
---
# -----------------------------------------------------------------------------
# SERVICE ACCOUNT: monitoring-service-account
# -----------------------------------------------------------------------------
# Namespace: ${SERVICE_NAMESPACES.MONITORING} (evaluates to "monitoring")
# Bound by monitoring-cluster-role-binding in rbac.yaml. This account generally
# references the "privileged" PodSecurityPolicy in pod-security-policies.yaml,
# since monitoring workflows may require elevated capabilities (e.g., host
# networking). Additional Prometheus-related annotations provide automatic
# scraping within the environment for real-time telemetry.
# -----------------------------------------------------------------------------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: monitoring-service-account
  namespace: "{{ .Values.SERVICE_NAMESPACES.MONITORING | default \"monitoring\" }}"
  labels:
    app.kubernetes.io/name: "monitoring"
    app.kubernetes.io/component: "service-account"
    app.kubernetes.io/part-of: "taskstream-ai"
    app.kubernetes.io/managed-by: "infrastructure-team"
  annotations:
    kubernetes.io/enforce-mountable-secrets: "true"
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    security.taskstream.ai/token-rotation: "enabled"
    security.taskstream.ai/audit-logging: "enabled"
automountServiceAccountToken: true